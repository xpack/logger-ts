{"id":16,"name":"Logger","kind":128,"kindString":"Class","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@summary","content":[{"kind":"text","text":"The Logger class implements the logger functionality."}]},{"tag":"@description","content":[{"kind":"text","text":"The logger is constructed on top of a console object, where the\nmessages are logged.\n\nUse "},{"kind":"code","text":"`log.always()`"},{"kind":"text","text":" instead of the "},{"kind":"code","text":"`console.log()`"},{"kind":"text","text":", since it accounts for\ndifferent contexts, created for instance when using REPL.\n\nThere is no "},{"kind":"code","text":"`critical`"},{"kind":"text","text":" level, corresponding to errors that prevent\nthe program to run, since these are actually related to bugs;\nuse "},{"kind":"code","text":"`assert()`"},{"kind":"text","text":" instead.\n\nThe messages may include formatting directives, with additional\narguments, as defined by the Node.js console (not really necessary\nwith ES6).\n\nAll output functions accept an optional string message and possibly\nsome arguments,\nas processed by the standard Node.js\n["},{"kind":"code","text":"`util.format(msg, ...args)`"},{"kind":"text","text":"](https://nodejs.org/dist/latest-v10.x/docs/api/util.html#util_util_format_format_args)\nfunction.\n\nIf the logging code is more complex than a single line,\nfor example if it needs a long loop,\nit is recommended to explicitly check the log level and,\nif not high enough, skip the code entirely."}]},{"tag":"@example","content":[{"kind":"code","text":"```javascript\n  if (log.isVerbose) {\n    for (const [folderName, folder] of Object.entries(folders)) {\n      log.trace(`'${folderName}' ${folder.toolchainOptions}`)\n    }\n  }\n```"},{"kind":"text","text":"\n\nThere are cases when the logger must be created very early in the\nlife cycle of an application, even before it is practically possible\nto determine the log level.\n\nFor these cases, if the logger is created without a log level,\nit is set to a **preliminary state**, and all log lines are\nstored in an **internal buffer**, until the log\nlevel is set, when the buffer is walked and the lines are processed."}]}]},"children":[{"id":30,"name":"constructor","kind":512,"kindString":"Constructor","flags":{},"sources":[{"fileName":"lib/logger.ts","fullFileName":"/Users/ilg/My Files/WKS Projects/xpack.github/npm-modules/logger-ts.git/src/lib/logger.ts","line":220,"character":2,"url":"https://github.com/xpack/logger-ts/blob/b503a59/src/lib/logger.ts#L220"}],"signatures":[{"id":31,"name":"constructor","kind":16384,"kindString":"Constructor signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@summary","content":[{"kind":"text","text":"Create a logger instance."}]},{"tag":"@description","content":[{"kind":"text","text":"The typical use case is to create a logger with a given log level,\nusually "},{"kind":"code","text":"`info`"},{"kind":"text","text":"."}]},{"tag":"@example","content":[{"kind":"code","text":"```javascript\nconst log = new Logger({\n  level: 'info'\n})\n```"},{"kind":"text","text":"\n\nBy default, the system console is used.\n\nThe complete use case is to create the logger instance with both a\n"},{"kind":"code","text":"`console`"},{"kind":"text","text":" and a "},{"kind":"code","text":"`level`"},{"kind":"text","text":". This might be particularly useful in tests."}]},{"tag":"@example","content":[{"kind":"code","text":"```javascript\nconst log = new Logger({\n  console: myConsole,\n  level: 'info'\n})\n```"},{"kind":"text","text":"\n\nIf present, the "},{"kind":"code","text":"`console`"},{"kind":"text","text":" must be an object with at least two methods,\n"},{"kind":"code","text":"`log()`"},{"kind":"text","text":" and "},{"kind":"code","text":"`error()`"},{"kind":"text","text":", as defined in the Node.js documentation for\n[console](https://nodejs.org/docs/latest-v14.x/api/console.html).\n\nThe "},{"kind":"code","text":"`level`"},{"kind":"text","text":" property is optional since it can be set later.\nWithout it, the constructor will\ncreate the logger in a preliminary state, and all log lines will be stored\nin an internal buffer until the log level is set."}]},{"tag":"@example","content":[{"kind":"code","text":"```javascript\nconst log = new Logger()\n```"}]}]},"parameters":[{"id":32,"name":"params","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The generic object used to pass parameters to the\nconstructor."}]},"type":{"type":"reference","id":5,"name":"LoggerConstructorParameters"},"defaultValue":"{}","text":{"comment":"<p>The generic object used to pass parameters to the\nconstructor.</p>\n"}}],"type":{"type":"reference","id":16,"name":"Logger"},"is":{"declaration":false},"location":{"query":"lib/logger.Logger.Constructor.constructor","hash":"constructor.new Logger"},"text":{"comment":"<h5>Summary:</h5><p>Create a logger instance.</p>\n<h5>Description:</h5><p>The typical use case is to create a logger with a given log level,\nusually <code>info</code>.</p>\n<h5>Example:</h5><pre><code class=\"language-javascript\"><span class=\"pl-k\">const</span> <span class=\"pl-c1\">log</span> <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-en\">Logger</span>({\n  level<span class=\"pl-k\">:</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>info<span class=\"pl-pds\">'</span></span>\n})\n</code></pre>\n<p>By default, the system console is used.</p>\n<p>The complete use case is to create the logger instance with both a\n<code>console</code> and a <code>level</code>. This might be particularly useful in tests.</p>\n<h5>Example:</h5><pre><code class=\"language-javascript\"><span class=\"pl-k\">const</span> <span class=\"pl-c1\">log</span> <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-en\">Logger</span>({\n  console<span class=\"pl-k\">:</span> myConsole,\n  level<span class=\"pl-k\">:</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>info<span class=\"pl-pds\">'</span></span>\n})\n</code></pre>\n<p>If present, the <code>console</code> must be an object with at least two methods,\n<code>log()</code> and <code>error()</code>, as defined in the Node.js documentation for\n<a href=\"https://nodejs.org/docs/latest-v14.x/api/console.html\">console</a>.</p>\n<p>The <code>level</code> property is optional since it can be set later.\nWithout it, the constructor will\ncreate the logger in a preliminary state, and all log lines will be stored\nin an internal buffer until the log level is set.</p>\n<h5>Example:</h5><pre><code class=\"language-javascript\"><span class=\"pl-k\">const</span> <span class=\"pl-c1\">log</span> <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-en\">Logger</span>()\n</code></pre>\n"},"sources":[{"fileName":"lib/logger.ts","fullFileName":"/Users/ilg/My Files/WKS Projects/xpack.github/npm-modules/logger-ts.git/src/lib/logger.ts","line":220,"character":2,"url":"https://github.com/xpack/logger-ts/blob/b503a59/src/lib/logger.ts#L220"}],"parentId":30}],"is":{"declaration":true},"location":{"query":"lib/logger.Class.Logger","hash":"constructor"},"text":{},"parentId":16},{"id":33,"name":"_console","kind":1024,"kindString":"Property","flags":{"isProtected":true,"isReadonly":true},"comment":{"summary":[{"kind":"text","text":"The console object used to output the log messages."}]},"sources":[{"fileName":"lib/logger.ts","fullFileName":"/Users/ilg/My Files/WKS Projects/xpack.github/npm-modules/logger-ts.git/src/lib/logger.ts","line":163,"character":21,"url":"https://github.com/xpack/logger-ts/blob/b503a59/src/lib/logger.ts#L163"}],"type":{"type":"reference","name":"Console","qualifiedName":"global.Console","package":"@types/node"},"defaultValue":"console","is":{"declaration":true},"location":{"query":"lib/logger.Class.Logger","hash":"_console"},"text":{"comment":"<p>The console object used to output the log messages.</p>\n"},"parentId":16},{"id":36,"name":"buffer","kind":1024,"kindString":"Property","flags":{"isProtected":true},"comment":{"summary":[{"kind":"text","text":"Empty buffer where preliminary log lines are stored\nuntil the log level is set."}]},"sources":[{"fileName":"lib/logger.ts","fullFileName":"/Users/ilg/My Files/WKS Projects/xpack.github/npm-modules/logger-ts.git/src/lib/logger.ts","line":171,"character":12,"url":"https://github.com/xpack/logger-ts/blob/b503a59/src/lib/logger.ts#L171"}],"type":{"type":"array","elementType":{"type":"reference","id":12,"name":"LoggerBufferRecord"}},"defaultValue":"[]","is":{"declaration":true},"location":{"query":"lib/logger.Class.Logger","hash":"buffer"},"text":{"comment":"<p>Empty buffer where preliminary log lines are stored\nuntil the log level is set.</p>\n"},"parentId":16},{"id":35,"name":"levelName","kind":1024,"kindString":"Property","flags":{"isProtected":true},"comment":{"summary":[{"kind":"text","text":"The name of the logger level."}]},"sources":[{"fileName":"lib/logger.ts","fullFileName":"/Users/ilg/My Files/WKS Projects/xpack.github/npm-modules/logger-ts.git/src/lib/logger.ts","line":167,"character":12,"url":"https://github.com/xpack/logger-ts/blob/b503a59/src/lib/logger.ts#L167"}],"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","id":3,"name":"LogLevel"}]},"defaultValue":"undefined","is":{"declaration":true},"location":{"query":"lib/logger.Class.Logger","hash":"levelName"},"text":{"comment":"<p>The name of the logger level.</p>\n"},"parentId":16},{"id":34,"name":"levelNumericValue","kind":1024,"kindString":"Property","flags":{"isProtected":true},"comment":{"summary":[{"kind":"text","text":"The numerical value of the logger level."}]},"sources":[{"fileName":"lib/logger.ts","fullFileName":"/Users/ilg/My Files/WKS Projects/xpack.github/npm-modules/logger-ts.git/src/lib/logger.ts","line":165,"character":12,"url":"https://github.com/xpack/logger-ts/blob/b503a59/src/lib/logger.ts#L165"}],"type":{"type":"intrinsic","name":"number"},"defaultValue":"Logger.numericLevelUndefined","is":{"declaration":true},"location":{"query":"lib/logger.Class.Logger","hash":"levelNumericValue"},"text":{"comment":"<p>The numerical value of the logger level.</p>\n"},"parentId":16},{"id":17,"name":"defaultLevel","kind":1024,"kindString":"Property","flags":{"isStatic":true},"comment":{"summary":[{"kind":"text","text":"The recommended default level."}]},"sources":[{"fileName":"lib/logger.ts","fullFileName":"/Users/ilg/My Files/WKS Projects/xpack.github/npm-modules/logger-ts.git/src/lib/logger.ts","line":139,"character":9,"url":"https://github.com/xpack/logger-ts/blob/b503a59/src/lib/logger.ts#L139"}],"type":{"type":"reference","id":3,"name":"LogLevel"},"defaultValue":"'info'","is":{"declaration":true},"location":{"query":"lib/logger.Class.Logger","hash":"defaultLevel"},"text":{"comment":"<p>The recommended default level.</p>\n"},"parentId":16},{"id":29,"name":"numericLevelAlways","kind":1024,"kindString":"Property","flags":{"isStatic":true},"comment":{"summary":[{"kind":"text","text":"The value used for the always case (minimum value)."}]},"sources":[{"fileName":"lib/logger.ts","fullFileName":"/Users/ilg/My Files/WKS Projects/xpack.github/npm-modules/logger-ts.git/src/lib/logger.ts","line":157,"character":9,"url":"https://github.com/xpack/logger-ts/blob/b503a59/src/lib/logger.ts#L157"}],"type":{"type":"intrinsic","name":"number"},"defaultValue":"-1","is":{"declaration":true},"location":{"query":"lib/logger.Class.Logger","hash":"numericLevelAlways"},"text":{"comment":"<p>The value used for the always case (minimum value).</p>\n"},"parentId":16},{"id":28,"name":"numericLevelUndefined","kind":1024,"kindString":"Property","flags":{"isStatic":true},"comment":{"summary":[{"kind":"text","text":"The value used for the undefined log level (maximum value)."}]},"sources":[{"fileName":"lib/logger.ts","fullFileName":"/Users/ilg/My Files/WKS Projects/xpack.github/npm-modules/logger-ts.git/src/lib/logger.ts","line":154,"character":9,"url":"https://github.com/xpack/logger-ts/blob/b503a59/src/lib/logger.ts#L154"}],"type":{"type":"intrinsic","name":"number"},"defaultValue":"Infinity","is":{"declaration":true},"location":{"query":"lib/logger.Class.Logger","hash":"numericLevelUndefined"},"text":{"comment":"<p>The value used for the undefined log level (maximum value).</p>\n"},"parentId":16},{"id":18,"name":"numericLevels","kind":1024,"kindString":"Property","flags":{"isStatic":true},"comment":{"summary":[{"kind":"text","text":"Internal numerical values for the log level."}]},"sources":[{"fileName":"lib/logger.ts","fullFileName":"/Users/ilg/My Files/WKS Projects/xpack.github/npm-modules/logger-ts.git/src/lib/logger.ts","line":142,"character":9,"url":"https://github.com/xpack/logger-ts/blob/b503a59/src/lib/logger.ts#L142"}],"type":{"type":"reflection","declaration":{"id":19,"name":"numericLevels","kind":65536,"kindString":"Type literal","flags":{},"children":[{"id":27,"name":"all","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"lib/logger.ts","fullFileName":"/Users/ilg/My Files/WKS Projects/xpack.github/npm-modules/logger-ts.git/src/lib/logger.ts","line":150,"character":4,"url":"https://github.com/xpack/logger-ts/blob/b503a59/src/lib/logger.ts#L150"}],"type":{"type":"intrinsic","name":"number"},"defaultValue":"70","is":{"declaration":true},"location":{"query":"lib/logger.Class.Logger","hash":"numericLevels.all"},"text":{},"parentId":16},{"id":25,"name":"debug","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"lib/logger.ts","fullFileName":"/Users/ilg/My Files/WKS Projects/xpack.github/npm-modules/logger-ts.git/src/lib/logger.ts","line":148,"character":4,"url":"https://github.com/xpack/logger-ts/blob/b503a59/src/lib/logger.ts#L148"}],"type":{"type":"intrinsic","name":"number"},"defaultValue":"50","is":{"declaration":true},"location":{"query":"lib/logger.Class.Logger","hash":"numericLevels.debug"},"text":{},"parentId":16},{"id":21,"name":"error","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"lib/logger.ts","fullFileName":"/Users/ilg/My Files/WKS Projects/xpack.github/npm-modules/logger-ts.git/src/lib/logger.ts","line":144,"character":4,"url":"https://github.com/xpack/logger-ts/blob/b503a59/src/lib/logger.ts#L144"}],"type":{"type":"intrinsic","name":"number"},"defaultValue":"10","is":{"declaration":true},"location":{"query":"lib/logger.Class.Logger","hash":"numericLevels.error"},"text":{},"parentId":16},{"id":23,"name":"info","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"lib/logger.ts","fullFileName":"/Users/ilg/My Files/WKS Projects/xpack.github/npm-modules/logger-ts.git/src/lib/logger.ts","line":146,"character":4,"url":"https://github.com/xpack/logger-ts/blob/b503a59/src/lib/logger.ts#L146"}],"type":{"type":"intrinsic","name":"number"},"defaultValue":"30","is":{"declaration":true},"location":{"query":"lib/logger.Class.Logger","hash":"numericLevels.info"},"text":{},"parentId":16},{"id":20,"name":"silent","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"lib/logger.ts","fullFileName":"/Users/ilg/My Files/WKS Projects/xpack.github/npm-modules/logger-ts.git/src/lib/logger.ts","line":143,"character":4,"url":"https://github.com/xpack/logger-ts/blob/b503a59/src/lib/logger.ts#L143"}],"type":{"type":"intrinsic","name":"number"},"defaultValue":"0","is":{"declaration":true},"location":{"query":"lib/logger.Class.Logger","hash":"numericLevels.silent"},"text":{},"parentId":16},{"id":26,"name":"trace","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"lib/logger.ts","fullFileName":"/Users/ilg/My Files/WKS Projects/xpack.github/npm-modules/logger-ts.git/src/lib/logger.ts","line":149,"character":4,"url":"https://github.com/xpack/logger-ts/blob/b503a59/src/lib/logger.ts#L149"}],"type":{"type":"intrinsic","name":"number"},"defaultValue":"60","is":{"declaration":true},"location":{"query":"lib/logger.Class.Logger","hash":"numericLevels.trace"},"text":{},"parentId":16},{"id":24,"name":"verbose","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"lib/logger.ts","fullFileName":"/Users/ilg/My Files/WKS Projects/xpack.github/npm-modules/logger-ts.git/src/lib/logger.ts","line":147,"character":4,"url":"https://github.com/xpack/logger-ts/blob/b503a59/src/lib/logger.ts#L147"}],"type":{"type":"intrinsic","name":"number"},"defaultValue":"40","is":{"declaration":true},"location":{"query":"lib/logger.Class.Logger","hash":"numericLevels.verbose"},"text":{},"parentId":16},{"id":22,"name":"warn","kind":1024,"kindString":"Property","flags":{},"sources":[{"fileName":"lib/logger.ts","fullFileName":"/Users/ilg/My Files/WKS Projects/xpack.github/npm-modules/logger-ts.git/src/lib/logger.ts","line":145,"character":4,"url":"https://github.com/xpack/logger-ts/blob/b503a59/src/lib/logger.ts#L145"}],"type":{"type":"intrinsic","name":"number"},"defaultValue":"20","is":{"declaration":true},"location":{"query":"lib/logger.Class.Logger","hash":"numericLevels.warn"},"text":{},"parentId":16}],"groups":[{"title":"Properties","children":[27,25,21,23,20,26,24,22]}],"sources":[{"fileName":"lib/logger.ts","line":142,"character":25,"url":"https://github.com/xpack/logger-ts/blob/b503a59/src/lib/logger.ts#L142"}],"location":{"query":"lib/logger.Class.Logger","hash":"numericLevels"}}},"defaultValue":"...","is":{"declaration":true},"location":{"query":"lib/logger.Class.Logger","hash":"numericLevels"},"text":{"comment":"<p>Internal numerical values for the log level.</p>\n"},"parentId":16},{"id":59,"name":"console","kind":262144,"kindString":"Accessor","flags":{},"sources":[{"fileName":"lib/logger.ts","fullFileName":"/Users/ilg/My Files/WKS Projects/xpack.github/npm-modules/logger-ts.git/src/lib/logger.ts","line":430,"character":6,"url":"https://github.com/xpack/logger-ts/blob/b503a59/src/lib/logger.ts#L430"}],"getSignature":{"id":60,"name":"console","kind":524288,"kindString":"Get signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@summary","content":[{"kind":"text","text":"Getter to obtain the underlying "},{"kind":"code","text":"`console`"},{"kind":"text","text":" object."}]},{"tag":"@returns","content":[{"kind":"text","text":"The console object used by the logger."}]}]},"type":{"type":"reference","name":"Console","qualifiedName":"global.Console","package":"@types/node"},"text":{"comment":"<h5>Summary:</h5><p>Getter to obtain the underlying <code>console</code> object.</p>\n<h5>Returns:</h5><p>The console object used by the logger.</p>\n"}},"is":{"declaration":true},"location":{"query":"lib/logger.Class.Logger","hash":"console"},"text":{},"parentId":16},{"id":37,"name":"hasLevel","kind":262144,"kindString":"Accessor","flags":{},"sources":[{"fileName":"lib/logger.ts","fullFileName":"/Users/ilg/My Files/WKS Projects/xpack.github/npm-modules/logger-ts.git/src/lib/logger.ts","line":259,"character":6,"url":"https://github.com/xpack/logger-ts/blob/b503a59/src/lib/logger.ts#L259"}],"getSignature":{"id":38,"name":"hasLevel","kind":524288,"kindString":"Get signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@summary","content":[{"kind":"text","text":"Getter to check if the logger level was initialised."}]},{"tag":"@returns","content":[{"kind":"text","text":"True if the level was set."}]},{"tag":"@description","content":[{"kind":"text","text":"Return "},{"kind":"code","text":"`true`"},{"kind":"text","text":" if the level was set."}]},{"tag":"@example","content":[{"kind":"code","text":"```console\nif (!log.hasLevel) {\n  log.level = defaultLevel\n}\n```"}]},{"tag":"@remarks","content":[{"kind":"text","text":"- changed to getters in v5.0.0\n- added in v2.1.0"}]}]},"type":{"type":"intrinsic","name":"boolean"},"text":{"comment":"<h5>Summary:</h5><p>Getter to check if the logger level was initialised.</p>\n<h5>Returns:</h5><p>True if the level was set.</p>\n<h5>Description:</h5><p>Return <code>true</code> if the level was set.</p>\n<h5>Example:</h5><pre><code class=\"language-console\">if (!log.hasLevel) {\n  log.level = defaultLevel\n}\n</code></pre>\n<h5>Remarks:</h5><ul>\n<li>changed to getters in v5.0.0</li>\n<li>added in v2.1.0</li>\n</ul>\n"}},"is":{"declaration":true},"location":{"query":"lib/logger.Class.Logger","hash":"hasLevel"},"text":{},"parentId":16},{"id":57,"name":"isAll","kind":262144,"kindString":"Accessor","flags":{},"sources":[{"fileName":"lib/logger.ts","fullFileName":"/Users/ilg/My Files/WKS Projects/xpack.github/npm-modules/logger-ts.git/src/lib/logger.ts","line":419,"character":6,"url":"https://github.com/xpack/logger-ts/blob/b503a59/src/lib/logger.ts#L419"}],"getSignature":{"id":58,"name":"isAll","kind":524288,"kindString":"Get signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@summary","content":[{"kind":"text","text":"Getter to check the log level."}]},{"tag":"@returns","content":[{"kind":"text","text":"True if the log level is "},{"kind":"code","text":"`all`"},{"kind":"text","text":"."}]},{"tag":"@remarks","content":[{"kind":"text","text":"- changed to getter starting with v3.x."}]}]},"type":{"type":"intrinsic","name":"boolean"},"text":{"comment":"<h5>Summary:</h5><p>Getter to check the log level.</p>\n<h5>Returns:</h5><p>True if the log level is <code>all</code>.</p>\n<h5>Remarks:</h5><ul>\n<li>changed to getter starting with v3.x.</li>\n</ul>\n"}},"is":{"declaration":true},"location":{"query":"lib/logger.Class.Logger","hash":"isAll"},"text":{},"parentId":16},{"id":53,"name":"isDebug","kind":262144,"kindString":"Accessor","flags":{},"sources":[{"fileName":"lib/logger.ts","fullFileName":"/Users/ilg/My Files/WKS Projects/xpack.github/npm-modules/logger-ts.git/src/lib/logger.ts","line":393,"character":6,"url":"https://github.com/xpack/logger-ts/blob/b503a59/src/lib/logger.ts#L393"}],"getSignature":{"id":54,"name":"isDebug","kind":524288,"kindString":"Get signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@summary","content":[{"kind":"text","text":"Getter to check the log level."}]},{"tag":"@returns","content":[{"kind":"text","text":"True if the log level is "},{"kind":"code","text":"`debug`"},{"kind":"text","text":" or higher."}]},{"tag":"@remarks","content":[{"kind":"text","text":"- changed to getter starting with v3.x."}]}]},"type":{"type":"intrinsic","name":"boolean"},"text":{"comment":"<h5>Summary:</h5><p>Getter to check the log level.</p>\n<h5>Returns:</h5><p>True if the log level is <code>debug</code> or higher.</p>\n<h5>Remarks:</h5><ul>\n<li>changed to getter starting with v3.x.</li>\n</ul>\n"}},"is":{"declaration":true},"location":{"query":"lib/logger.Class.Logger","hash":"isDebug"},"text":{},"parentId":16},{"id":45,"name":"isError","kind":262144,"kindString":"Accessor","flags":{},"sources":[{"fileName":"lib/logger.ts","fullFileName":"/Users/ilg/My Files/WKS Projects/xpack.github/npm-modules/logger-ts.git/src/lib/logger.ts","line":341,"character":6,"url":"https://github.com/xpack/logger-ts/blob/b503a59/src/lib/logger.ts#L341"}],"getSignature":{"id":46,"name":"isError","kind":524288,"kindString":"Get signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@summary","content":[{"kind":"text","text":"Getter to check the log level."}]},{"tag":"@returns","content":[{"kind":"text","text":"True if the log level is "},{"kind":"code","text":"`error`"},{"kind":"text","text":" or higher."}]},{"tag":"@remarks","content":[{"kind":"text","text":"- changed to getter starting with v3.x."}]}]},"type":{"type":"intrinsic","name":"boolean"},"text":{"comment":"<h5>Summary:</h5><p>Getter to check the log level.</p>\n<h5>Returns:</h5><p>True if the log level is <code>error</code> or higher.</p>\n<h5>Remarks:</h5><ul>\n<li>changed to getter starting with v3.x.</li>\n</ul>\n"}},"is":{"declaration":true},"location":{"query":"lib/logger.Class.Logger","hash":"isError"},"text":{},"parentId":16},{"id":49,"name":"isInfo","kind":262144,"kindString":"Accessor","flags":{},"sources":[{"fileName":"lib/logger.ts","fullFileName":"/Users/ilg/My Files/WKS Projects/xpack.github/npm-modules/logger-ts.git/src/lib/logger.ts","line":367,"character":6,"url":"https://github.com/xpack/logger-ts/blob/b503a59/src/lib/logger.ts#L367"}],"getSignature":{"id":50,"name":"isInfo","kind":524288,"kindString":"Get signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@summary","content":[{"kind":"text","text":"Getter to check the log level."}]},{"tag":"@returns","content":[{"kind":"text","text":"True if the log level is "},{"kind":"code","text":"`info`"},{"kind":"text","text":" or higher."}]},{"tag":"@remarks","content":[{"kind":"text","text":"- changed to getter starting with v3.x."}]}]},"type":{"type":"intrinsic","name":"boolean"},"text":{"comment":"<h5>Summary:</h5><p>Getter to check the log level.</p>\n<h5>Returns:</h5><p>True if the log level is <code>info</code> or higher.</p>\n<h5>Remarks:</h5><ul>\n<li>changed to getter starting with v3.x.</li>\n</ul>\n"}},"is":{"declaration":true},"location":{"query":"lib/logger.Class.Logger","hash":"isInfo"},"text":{},"parentId":16},{"id":43,"name":"isSilent","kind":262144,"kindString":"Accessor","flags":{},"sources":[{"fileName":"lib/logger.ts","fullFileName":"/Users/ilg/My Files/WKS Projects/xpack.github/npm-modules/logger-ts.git/src/lib/logger.ts","line":328,"character":6,"url":"https://github.com/xpack/logger-ts/blob/b503a59/src/lib/logger.ts#L328"}],"getSignature":{"id":44,"name":"isSilent","kind":524288,"kindString":"Get signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@summary","content":[{"kind":"text","text":"Getter to check the log level."}]},{"tag":"@returns","content":[{"kind":"text","text":"True if the log level is "},{"kind":"code","text":"`silent`"},{"kind":"text","text":" or higher."}]},{"tag":"@remarks","content":[{"kind":"text","text":"- changed to getter starting with v3.x."}]}]},"type":{"type":"intrinsic","name":"boolean"},"text":{"comment":"<h5>Summary:</h5><p>Getter to check the log level.</p>\n<h5>Returns:</h5><p>True if the log level is <code>silent</code> or higher.</p>\n<h5>Remarks:</h5><ul>\n<li>changed to getter starting with v3.x.</li>\n</ul>\n"}},"is":{"declaration":true},"location":{"query":"lib/logger.Class.Logger","hash":"isSilent"},"text":{},"parentId":16},{"id":55,"name":"isTrace","kind":262144,"kindString":"Accessor","flags":{},"sources":[{"fileName":"lib/logger.ts","fullFileName":"/Users/ilg/My Files/WKS Projects/xpack.github/npm-modules/logger-ts.git/src/lib/logger.ts","line":406,"character":6,"url":"https://github.com/xpack/logger-ts/blob/b503a59/src/lib/logger.ts#L406"}],"getSignature":{"id":56,"name":"isTrace","kind":524288,"kindString":"Get signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@summary","content":[{"kind":"text","text":"Getter to check the log level."}]},{"tag":"@returns","content":[{"kind":"text","text":"True if the log level is "},{"kind":"code","text":"`trace`"},{"kind":"text","text":" or higher."}]},{"tag":"@remarks","content":[{"kind":"text","text":"- changed to getter starting with v3.x."}]}]},"type":{"type":"intrinsic","name":"boolean"},"text":{"comment":"<h5>Summary:</h5><p>Getter to check the log level.</p>\n<h5>Returns:</h5><p>True if the log level is <code>trace</code> or higher.</p>\n<h5>Remarks:</h5><ul>\n<li>changed to getter starting with v3.x.</li>\n</ul>\n"}},"is":{"declaration":true},"location":{"query":"lib/logger.Class.Logger","hash":"isTrace"},"text":{},"parentId":16},{"id":51,"name":"isVerbose","kind":262144,"kindString":"Accessor","flags":{},"sources":[{"fileName":"lib/logger.ts","fullFileName":"/Users/ilg/My Files/WKS Projects/xpack.github/npm-modules/logger-ts.git/src/lib/logger.ts","line":380,"character":6,"url":"https://github.com/xpack/logger-ts/blob/b503a59/src/lib/logger.ts#L380"}],"getSignature":{"id":52,"name":"isVerbose","kind":524288,"kindString":"Get signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@summary","content":[{"kind":"text","text":"Getter to check the log level."}]},{"tag":"@returns","content":[{"kind":"text","text":"True if the log level is "},{"kind":"code","text":"`verbose`"},{"kind":"text","text":" or higher."}]},{"tag":"@remarks","content":[{"kind":"text","text":"- changed to getter starting with v3.x."}]}]},"type":{"type":"intrinsic","name":"boolean"},"text":{"comment":"<h5>Summary:</h5><p>Getter to check the log level.</p>\n<h5>Returns:</h5><p>True if the log level is <code>verbose</code> or higher.</p>\n<h5>Remarks:</h5><ul>\n<li>changed to getter starting with v3.x.</li>\n</ul>\n"}},"is":{"declaration":true},"location":{"query":"lib/logger.Class.Logger","hash":"isVerbose"},"text":{},"parentId":16},{"id":47,"name":"isWarn","kind":262144,"kindString":"Accessor","flags":{},"sources":[{"fileName":"lib/logger.ts","fullFileName":"/Users/ilg/My Files/WKS Projects/xpack.github/npm-modules/logger-ts.git/src/lib/logger.ts","line":354,"character":6,"url":"https://github.com/xpack/logger-ts/blob/b503a59/src/lib/logger.ts#L354"}],"getSignature":{"id":48,"name":"isWarn","kind":524288,"kindString":"Get signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@summary","content":[{"kind":"text","text":"Getter to check the log level."}]},{"tag":"@returns","content":[{"kind":"text","text":"True if the log level is "},{"kind":"code","text":"`warn`"},{"kind":"text","text":" or higher."}]},{"tag":"@remarks","content":[{"kind":"text","text":"- changed to getter starting with v3.x."}]}]},"type":{"type":"intrinsic","name":"boolean"},"text":{"comment":"<h5>Summary:</h5><p>Getter to check the log level.</p>\n<h5>Returns:</h5><p>True if the log level is <code>warn</code> or higher.</p>\n<h5>Remarks:</h5><ul>\n<li>changed to getter starting with v3.x.</li>\n</ul>\n"}},"is":{"declaration":true},"location":{"query":"lib/logger.Class.Logger","hash":"isWarn"},"text":{},"parentId":16},{"id":39,"name":"level","kind":262144,"kindString":"Accessor","flags":{},"sources":[{"fileName":"lib/logger.ts","fullFileName":"/Users/ilg/My Files/WKS Projects/xpack.github/npm-modules/logger-ts.git/src/lib/logger.ts","line":279,"character":6,"url":"https://github.com/xpack/logger-ts/blob/b503a59/src/lib/logger.ts#L279"},{"fileName":"lib/logger.ts","fullFileName":"/Users/ilg/My Files/WKS Projects/xpack.github/npm-modules/logger-ts.git/src/lib/logger.ts","line":315,"character":6,"url":"https://github.com/xpack/logger-ts/blob/b503a59/src/lib/logger.ts#L315"}],"getSignature":{"id":40,"name":"level","kind":524288,"kindString":"Get signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@summary","content":[{"kind":"text","text":"Getter for the log level."}]},{"tag":"@returns","content":[{"kind":"text","text":"The log level name."}]},{"tag":"@description","content":[{"kind":"text","text":"Get the current log level, as a string."}]},{"tag":"@example","content":[{"kind":"code","text":"```javascript\nconsole.log(log.level)\n```"}]}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","id":3,"name":"LogLevel"}]},"text":{"comment":"<h5>Summary:</h5><p>Getter for the log level.</p>\n<h5>Returns:</h5><p>The log level name.</p>\n<h5>Description:</h5><p>Get the current log level, as a string.</p>\n<h5>Example:</h5><pre><code class=\"language-javascript\"><span class=\"pl-en\">console</span>.<span class=\"pl-c1\">log</span>(<span class=\"pl-smi\">log</span>.<span class=\"pl-smi\">level</span>)\n</code></pre>\n"}},"setSignature":{"id":41,"name":"level","kind":1048576,"kindString":"Set signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@summary","content":[{"kind":"text","text":"Setter for the log level."}]},{"tag":"@description","content":[{"kind":"text","text":"Set the log level. If this is the first time when the log level is set,\nflush the internal buffer."}]},{"tag":"@example","content":[{"kind":"code","text":"```javascript\nlog.level = 'info'\n```"},{"kind":"text","text":"\nIf the log level is not one of the known strings, an assert will fire."}]}]},"parameters":[{"id":42,"name":"level","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The new log level."}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"reference","id":3,"name":"LogLevel"}]},"text":{"comment":"<p>The new log level.</p>\n"}}],"type":{"type":"intrinsic","name":"void"},"text":{"comment":"<h5>Summary:</h5><p>Setter for the log level.</p>\n<h5>Description:</h5><p>Set the log level. If this is the first time when the log level is set,\nflush the internal buffer.</p>\n<h5>Example:</h5><pre><code class=\"language-javascript\"><span class=\"pl-smi\">log</span>.<span class=\"pl-smi\">level</span> <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>info<span class=\"pl-pds\">'</span></span>\n</code></pre>\n<p>If the log level is not one of the known strings, an assert will fire.</p>\n"}},"is":{"declaration":true},"location":{"query":"lib/logger.Class.Logger","hash":"level"},"text":{},"parentId":16},{"id":66,"name":"always","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"lib/logger.ts","fullFileName":"/Users/ilg/My Files/WKS Projects/xpack.github/npm-modules/logger-ts.git/src/lib/logger.ts","line":491,"character":2,"url":"https://github.com/xpack/logger-ts/blob/b503a59/src/lib/logger.ts#L491"}],"signatures":[{"id":67,"name":"always","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@summary","content":[{"kind":"text","text":"Output always."}]},{"tag":"@description","content":[{"kind":"text","text":"Log always, regardless of the log level, (even "},{"kind":"code","text":"`'silent'`"},{"kind":"text","text":", when no other\nmessages are logged). The message is passed via "},{"kind":"code","text":"`console.log()`"},{"kind":"text","text":"."}]},{"tag":"@example","content":[{"kind":"code","text":"```javascript\nlog.always(version)\n```"}]}]},"parameters":[{"id":68,"name":"message","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Message to log, as accepted by "},{"kind":"code","text":"`util.format()`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"any"},"defaultValue":"''","text":{"comment":"<p>Message to log, as accepted by <code>util.format()</code>.</p>\n"}},{"id":69,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"Optional variable arguments."}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}},"text":{"comment":"<p>Optional variable arguments.</p>\n"}}],"type":{"type":"intrinsic","name":"void"},"is":{"declaration":false},"location":{"query":"lib/logger.Logger.Method.always","hash":"always.always"},"text":{"comment":"<h5>Summary:</h5><p>Output always.</p>\n<h5>Description:</h5><p>Log always, regardless of the log level, (even <code>&#39;silent&#39;</code>, when no other\nmessages are logged). The message is passed via <code>console.log()</code>.</p>\n<h5>Example:</h5><pre><code class=\"language-javascript\"><span class=\"pl-smi\">log</span>.<span class=\"pl-en\">always</span>(version)\n</code></pre>\n"},"sources":[{"fileName":"lib/logger.ts","fullFileName":"/Users/ilg/My Files/WKS Projects/xpack.github/npm-modules/logger-ts.git/src/lib/logger.ts","line":491,"character":2,"url":"https://github.com/xpack/logger-ts/blob/b503a59/src/lib/logger.ts#L491"}],"parentId":66}],"is":{"declaration":true},"location":{"query":"lib/logger.Class.Logger","hash":"always"},"text":{},"parentId":16},{"id":90,"name":"debug","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"lib/logger.ts","fullFileName":"/Users/ilg/My Files/WKS Projects/xpack.github/npm-modules/logger-ts.git/src/lib/logger.ts","line":662,"character":2,"url":"https://github.com/xpack/logger-ts/blob/b503a59/src/lib/logger.ts#L662"}],"signatures":[{"id":91,"name":"debug","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@summary","content":[{"kind":"text","text":"Log debug messages."}]},{"tag":"@description","content":[{"kind":"text","text":"Log debug messages, if the log level is "},{"kind":"code","text":"`'debug'`"},{"kind":"text","text":" or higher.\nThe message is prefixed with "},{"kind":"code","text":"`debug: `"},{"kind":"text","text":" and\npassed via "},{"kind":"code","text":"`console.log()`"},{"kind":"text","text":"."}]},{"tag":"@example","content":[{"kind":"code","text":"```javascript\nlog.debug(`spawn: ${cmd}`)\n```"}]}]},"parameters":[{"id":92,"name":"message","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Message to log, as accepted by "},{"kind":"code","text":"`util.format()`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"any"},"defaultValue":"''","text":{"comment":"<p>Message to log, as accepted by <code>util.format()</code>.</p>\n"}},{"id":93,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"Optional variable arguments."}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}},"text":{"comment":"<p>Optional variable arguments.</p>\n"}}],"type":{"type":"intrinsic","name":"void"},"is":{"declaration":false},"location":{"query":"lib/logger.Logger.Method.debug","hash":"debug.debug"},"text":{"comment":"<h5>Summary:</h5><p>Log debug messages.</p>\n<h5>Description:</h5><p>Log debug messages, if the log level is <code>&#39;debug&#39;</code> or higher.\nThe message is prefixed with <code>debug: </code> and\npassed via <code>console.log()</code>.</p>\n<h5>Example:</h5><pre><code class=\"language-javascript\"><span class=\"pl-smi\">log</span>.<span class=\"pl-en\">debug</span>(<span class=\"pl-s\"><span class=\"pl-pds\">`</span>spawn: <span class=\"pl-pse\"><span class=\"pl-s1\">${</span></span><span class=\"pl-s1\">cmd</span><span class=\"pl-pse\"><span class=\"pl-s1\">}</span></span><span class=\"pl-pds\">`</span></span>)\n</code></pre>\n"},"sources":[{"fileName":"lib/logger.ts","fullFileName":"/Users/ilg/My Files/WKS Projects/xpack.github/npm-modules/logger-ts.git/src/lib/logger.ts","line":662,"character":2,"url":"https://github.com/xpack/logger-ts/blob/b503a59/src/lib/logger.ts#L662"}],"parentId":90}],"is":{"declaration":true},"location":{"query":"lib/logger.Class.Logger","hash":"debug"},"text":{},"parentId":16},{"id":70,"name":"error","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"lib/logger.ts","fullFileName":"/Users/ilg/My Files/WKS Projects/xpack.github/npm-modules/logger-ts.git/src/lib/logger.ts","line":527,"character":2,"url":"https://github.com/xpack/logger-ts/blob/b503a59/src/lib/logger.ts#L527"}],"signatures":[{"id":71,"name":"error","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@summary","content":[{"kind":"text","text":"Log error messages."}]},{"tag":"@description","content":[{"kind":"text","text":"Log error messages, if the log level is "},{"kind":"code","text":"`error`"},{"kind":"text","text":" or higher.\nThe message is prefixed with "},{"kind":"code","text":"`error: `"},{"kind":"text","text":" and\npassed via "},{"kind":"code","text":"`console.error()`"},{"kind":"text","text":"."}]},{"tag":"@example","content":[{"kind":"code","text":"```javascript\nlog.error('Not good...')\n```"},{"kind":"text","text":"\n\nThere is a special case when the input is an "},{"kind":"code","text":"`Error`"},{"kind":"text","text":" object. It\nis expanded, including a full stack trace, and passed via\n"},{"kind":"code","text":"`console.error()`"},{"kind":"text","text":"."}]},{"tag":"@example","content":[{"kind":"code","text":"```javascript\ntry {\n  // ...\n} catch (err) {\n  log.error(err)\n}\n```"}]}]},"parameters":[{"id":72,"name":"message","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Message to log, as accepted by "},{"kind":"code","text":"`util.format()`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"any"},"defaultValue":"''","text":{"comment":"<p>Message to log, as accepted by <code>util.format()</code>.</p>\n"}},{"id":73,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"Optional variable arguments."}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}},"text":{"comment":"<p>Optional variable arguments.</p>\n"}}],"type":{"type":"intrinsic","name":"void"},"is":{"declaration":false},"location":{"query":"lib/logger.Logger.Method.error","hash":"error.error"},"text":{"comment":"<h5>Summary:</h5><p>Log error messages.</p>\n<h5>Description:</h5><p>Log error messages, if the log level is <code>error</code> or higher.\nThe message is prefixed with <code>error: </code> and\npassed via <code>console.error()</code>.</p>\n<h5>Example:</h5><pre><code class=\"language-javascript\"><span class=\"pl-smi\">log</span>.<span class=\"pl-en\">error</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>Not good...<span class=\"pl-pds\">'</span></span>)\n</code></pre>\n<p>There is a special case when the input is an <code>Error</code> object. It\nis expanded, including a full stack trace, and passed via\n<code>console.error()</code>.</p>\n<h5>Example:</h5><pre><code class=\"language-javascript\"><span class=\"pl-k\">try</span> {\n  <span class=\"pl-c\">// ...</span>\n} <span class=\"pl-k\">catch</span> (err) {\n  <span class=\"pl-smi\">log</span>.<span class=\"pl-en\">error</span>(err)\n}\n</code></pre>\n"},"sources":[{"fileName":"lib/logger.ts","fullFileName":"/Users/ilg/My Files/WKS Projects/xpack.github/npm-modules/logger-ts.git/src/lib/logger.ts","line":527,"character":2,"url":"https://github.com/xpack/logger-ts/blob/b503a59/src/lib/logger.ts#L527"}],"parentId":70}],"is":{"declaration":true},"location":{"query":"lib/logger.Class.Logger","hash":"error"},"text":{},"parentId":16},{"id":82,"name":"info","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"lib/logger.ts","fullFileName":"/Users/ilg/My Files/WKS Projects/xpack.github/npm-modules/logger-ts.git/src/lib/logger.ts","line":615,"character":2,"url":"https://github.com/xpack/logger-ts/blob/b503a59/src/lib/logger.ts#L615"}],"signatures":[{"id":83,"name":"info","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@summary","content":[{"kind":"text","text":"Log informative messages."}]},{"tag":"@description","content":[{"kind":"text","text":"Log informative messages, if the log level is "},{"kind":"code","text":"`info`"},{"kind":"text","text":" or higher.\nThe message is passed via "},{"kind":"code","text":"`console.log()`"},{"kind":"text","text":"."}]},{"tag":"@example","content":[{"kind":"code","text":"```javascript\nlog.info(title)\n```"}]}]},"parameters":[{"id":84,"name":"message","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Message to log, as accepted by "},{"kind":"code","text":"`util.format()`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"any"},"defaultValue":"''","text":{"comment":"<p>Message to log, as accepted by <code>util.format()</code>.</p>\n"}},{"id":85,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"Optional variable arguments."}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}},"text":{"comment":"<p>Optional variable arguments.</p>\n"}}],"type":{"type":"intrinsic","name":"void"},"is":{"declaration":false},"location":{"query":"lib/logger.Logger.Method.info","hash":"info.info"},"text":{"comment":"<h5>Summary:</h5><p>Log informative messages.</p>\n<h5>Description:</h5><p>Log informative messages, if the log level is <code>info</code> or higher.\nThe message is passed via <code>console.log()</code>.</p>\n<h5>Example:</h5><pre><code class=\"language-javascript\"><span class=\"pl-smi\">log</span>.<span class=\"pl-en\">info</span>(title)\n</code></pre>\n"},"sources":[{"fileName":"lib/logger.ts","fullFileName":"/Users/ilg/My Files/WKS Projects/xpack.github/npm-modules/logger-ts.git/src/lib/logger.ts","line":615,"character":2,"url":"https://github.com/xpack/logger-ts/blob/b503a59/src/lib/logger.ts#L615"}],"parentId":82}],"is":{"declaration":true},"location":{"query":"lib/logger.Class.Logger","hash":"info"},"text":{},"parentId":16},{"id":74,"name":"output","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"lib/logger.ts","fullFileName":"/Users/ilg/My Files/WKS Projects/xpack.github/npm-modules/logger-ts.git/src/lib/logger.ts","line":567,"character":2,"url":"https://github.com/xpack/logger-ts/blob/b503a59/src/lib/logger.ts#L567"}],"signatures":[{"id":75,"name":"output","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@summary","content":[{"kind":"text","text":"Log error messages."}]},{"tag":"@description","content":[{"kind":"text","text":"Log error messages, if the log level is "},{"kind":"code","text":"`error`"},{"kind":"text","text":" or higher.\nIt differs from "},{"kind":"code","text":"`error()`"},{"kind":"text","text":" by **not** prefixing the string with "},{"kind":"code","text":"`error: `"},{"kind":"text","text":"\nand using "},{"kind":"code","text":"`console.log()`"},{"kind":"text","text":" instead of "},{"kind":"code","text":"`console.error()`"},{"kind":"text","text":"."}]},{"tag":"@example","content":[{"kind":"code","text":"```javascript\nlog.output('Not good either...')\n```"}]},{"tag":"@example","content":[{"kind":"code","text":"```javascript\ntry {\n  // ...\n} catch (err) {\n  // Do not show the stack trace.\n  log.output(err)\n}\n```"}]}]},"parameters":[{"id":76,"name":"message","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Message to log, as accepted by "},{"kind":"code","text":"`util.format()`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"any"},"defaultValue":"''","text":{"comment":"<p>Message to log, as accepted by <code>util.format()</code>.</p>\n"}},{"id":77,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"Optional variable arguments."}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}},"text":{"comment":"<p>Optional variable arguments.</p>\n"}}],"type":{"type":"intrinsic","name":"void"},"is":{"declaration":false},"location":{"query":"lib/logger.Logger.Method.output","hash":"output.output"},"text":{"comment":"<h5>Summary:</h5><p>Log error messages.</p>\n<h5>Description:</h5><p>Log error messages, if the log level is <code>error</code> or higher.\nIt differs from <code>error()</code> by <strong>not</strong> prefixing the string with <code>error: </code>\nand using <code>console.log()</code> instead of <code>console.error()</code>.</p>\n<h5>Example:</h5><pre><code class=\"language-javascript\"><span class=\"pl-smi\">log</span>.<span class=\"pl-en\">output</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>Not good either...<span class=\"pl-pds\">'</span></span>)\n</code></pre>\n<h5>Example:</h5><pre><code class=\"language-javascript\"><span class=\"pl-k\">try</span> {\n  <span class=\"pl-c\">// ...</span>\n} <span class=\"pl-k\">catch</span> (err) {\n  <span class=\"pl-c\">// Do not show the stack trace.</span>\n  <span class=\"pl-smi\">log</span>.<span class=\"pl-en\">output</span>(err)\n}\n</code></pre>\n"},"sources":[{"fileName":"lib/logger.ts","fullFileName":"/Users/ilg/My Files/WKS Projects/xpack.github/npm-modules/logger-ts.git/src/lib/logger.ts","line":567,"character":2,"url":"https://github.com/xpack/logger-ts/blob/b503a59/src/lib/logger.ts#L567"}],"parentId":74}],"is":{"declaration":true},"location":{"query":"lib/logger.Class.Logger","hash":"output"},"text":{},"parentId":16},{"id":94,"name":"trace","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"lib/logger.ts","fullFileName":"/Users/ilg/My Files/WKS Projects/xpack.github/npm-modules/logger-ts.git/src/lib/logger.ts","line":687,"character":2,"url":"https://github.com/xpack/logger-ts/blob/b503a59/src/lib/logger.ts#L687"}],"signatures":[{"id":95,"name":"trace","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@summary","content":[{"kind":"text","text":"Log trace messages."}]},{"tag":"@description","content":[{"kind":"text","text":"Log trace messages, if the log level is "},{"kind":"code","text":"`trace`"},{"kind":"text","text":" or higher.\nThe message is prefixed with "},{"kind":"code","text":"`trace: `"},{"kind":"text","text":" and\npassed via "},{"kind":"code","text":"`console.log()`"},{"kind":"text","text":"."}]},{"tag":"@example","content":[{"kind":"code","text":"```javascript\nlog.trace(`${this.constructor.name}.doRun()`)\n```"}]}]},"parameters":[{"id":96,"name":"message","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Message to log, as accepted by "},{"kind":"code","text":"`util.format()`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"any"},"defaultValue":"''","text":{"comment":"<p>Message to log, as accepted by <code>util.format()</code>.</p>\n"}},{"id":97,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"Optional variable arguments."}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}},"text":{"comment":"<p>Optional variable arguments.</p>\n"}}],"type":{"type":"intrinsic","name":"void"},"is":{"declaration":false},"location":{"query":"lib/logger.Logger.Method.trace","hash":"trace.trace"},"text":{"comment":"<h5>Summary:</h5><p>Log trace messages.</p>\n<h5>Description:</h5><p>Log trace messages, if the log level is <code>trace</code> or higher.\nThe message is prefixed with <code>trace: </code> and\npassed via <code>console.log()</code>.</p>\n<h5>Example:</h5><pre><code class=\"language-javascript\"><span class=\"pl-smi\">log</span>.<span class=\"pl-en\">trace</span>(<span class=\"pl-s\"><span class=\"pl-pds\">`</span><span class=\"pl-pse\"><span class=\"pl-s1\">${</span></span><span class=\"pl-c1\">this</span><span class=\"pl-s1\">.</span><span class=\"pl-c1\">constructor</span><span class=\"pl-s1\">.</span><span class=\"pl-c1\">name</span><span class=\"pl-pse\"><span class=\"pl-s1\">}</span></span>.doRun()<span class=\"pl-pds\">`</span></span>)\n</code></pre>\n"},"sources":[{"fileName":"lib/logger.ts","fullFileName":"/Users/ilg/My Files/WKS Projects/xpack.github/npm-modules/logger-ts.git/src/lib/logger.ts","line":687,"character":2,"url":"https://github.com/xpack/logger-ts/blob/b503a59/src/lib/logger.ts#L687"}],"parentId":94}],"is":{"declaration":true},"location":{"query":"lib/logger.Class.Logger","hash":"trace"},"text":{},"parentId":16},{"id":86,"name":"verbose","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"lib/logger.ts","fullFileName":"/Users/ilg/My Files/WKS Projects/xpack.github/npm-modules/logger-ts.git/src/lib/logger.ts","line":638,"character":2,"url":"https://github.com/xpack/logger-ts/blob/b503a59/src/lib/logger.ts#L638"}],"signatures":[{"id":87,"name":"verbose","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@summary","content":[{"kind":"text","text":"Log informative messages."}]},{"tag":"@description","content":[{"kind":"text","text":"Log more informative messages, if the log level is "},{"kind":"code","text":"`verbose`"},{"kind":"text","text":" or higher.\nThe message is passed via "},{"kind":"code","text":"`console.log()`"},{"kind":"text","text":"."}]},{"tag":"@example","content":[{"kind":"code","text":"```javascript\nlog.verbose('Configurations:')\n```"}]}]},"parameters":[{"id":88,"name":"message","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Message to log, as accepted by "},{"kind":"code","text":"`util.format()`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"any"},"defaultValue":"''","text":{"comment":"<p>Message to log, as accepted by <code>util.format()</code>.</p>\n"}},{"id":89,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"Optional variable arguments."}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}},"text":{"comment":"<p>Optional variable arguments.</p>\n"}}],"type":{"type":"intrinsic","name":"void"},"is":{"declaration":false},"location":{"query":"lib/logger.Logger.Method.verbose","hash":"verbose.verbose"},"text":{"comment":"<h5>Summary:</h5><p>Log informative messages.</p>\n<h5>Description:</h5><p>Log more informative messages, if the log level is <code>verbose</code> or higher.\nThe message is passed via <code>console.log()</code>.</p>\n<h5>Example:</h5><pre><code class=\"language-javascript\"><span class=\"pl-smi\">log</span>.<span class=\"pl-en\">verbose</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>Configurations:<span class=\"pl-pds\">'</span></span>)\n</code></pre>\n"},"sources":[{"fileName":"lib/logger.ts","fullFileName":"/Users/ilg/My Files/WKS Projects/xpack.github/npm-modules/logger-ts.git/src/lib/logger.ts","line":638,"character":2,"url":"https://github.com/xpack/logger-ts/blob/b503a59/src/lib/logger.ts#L638"}],"parentId":86}],"is":{"declaration":true},"location":{"query":"lib/logger.Class.Logger","hash":"verbose"},"text":{},"parentId":16},{"id":78,"name":"warn","kind":2048,"kindString":"Method","flags":{},"sources":[{"fileName":"lib/logger.ts","fullFileName":"/Users/ilg/My Files/WKS Projects/xpack.github/npm-modules/logger-ts.git/src/lib/logger.ts","line":591,"character":2,"url":"https://github.com/xpack/logger-ts/blob/b503a59/src/lib/logger.ts#L591"}],"signatures":[{"id":79,"name":"warn","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@summary","content":[{"kind":"text","text":"Log warning messages."}]},{"tag":"@description","content":[{"kind":"text","text":"Log warning messages, if the log level is "},{"kind":"code","text":"`warn`"},{"kind":"text","text":" or higher.\nThe message is prefixed with "},{"kind":"code","text":"`warning: `"},{"kind":"text","text":" and\npassed via "},{"kind":"code","text":"`console.error()`"},{"kind":"text","text":"."}]},{"tag":"@example","content":[{"kind":"code","text":"```javascript\nlog.info(title)\n```"}]}]},"parameters":[{"id":80,"name":"message","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"Message to log, as accepted by "},{"kind":"code","text":"`util.format()`"},{"kind":"text","text":"."}]},"type":{"type":"intrinsic","name":"any"},"defaultValue":"''","text":{"comment":"<p>Message to log, as accepted by <code>util.format()</code>.</p>\n"}},{"id":81,"name":"args","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"comment":{"summary":[{"kind":"text","text":"Optional variable arguments."}]},"type":{"type":"array","elementType":{"type":"intrinsic","name":"any"}},"text":{"comment":"<p>Optional variable arguments.</p>\n"}}],"type":{"type":"intrinsic","name":"void"},"is":{"declaration":false},"location":{"query":"lib/logger.Logger.Method.warn","hash":"warn.warn"},"text":{"comment":"<h5>Summary:</h5><p>Log warning messages.</p>\n<h5>Description:</h5><p>Log warning messages, if the log level is <code>warn</code> or higher.\nThe message is prefixed with <code>warning: </code> and\npassed via <code>console.error()</code>.</p>\n<h5>Example:</h5><pre><code class=\"language-javascript\"><span class=\"pl-smi\">log</span>.<span class=\"pl-en\">info</span>(title)\n</code></pre>\n"},"sources":[{"fileName":"lib/logger.ts","fullFileName":"/Users/ilg/My Files/WKS Projects/xpack.github/npm-modules/logger-ts.git/src/lib/logger.ts","line":591,"character":2,"url":"https://github.com/xpack/logger-ts/blob/b503a59/src/lib/logger.ts#L591"}],"parentId":78}],"is":{"declaration":true},"location":{"query":"lib/logger.Class.Logger","hash":"warn"},"text":{},"parentId":16},{"id":61,"name":"write","kind":2048,"kindString":"Method","flags":{"isProtected":true},"sources":[{"fileName":"lib/logger.ts","fullFileName":"/Users/ilg/My Files/WKS Projects/xpack.github/npm-modules/logger-ts.git/src/lib/logger.ts","line":450,"character":12,"url":"https://github.com/xpack/logger-ts/blob/b503a59/src/lib/logger.ts#L450"}],"signatures":[{"id":62,"name":"write","kind":4096,"kindString":"Call signature","flags":{},"comment":{"summary":[],"blockTags":[{"tag":"@summary","content":[{"kind":"text","text":"The internal log writer."}]},{"tag":"@description","content":[{"kind":"text","text":"If the log level was defined, call the function, otherwise\nstore the log line details in the array buffer, for later\nprocessing, when the log level is defined."}]}]},"parameters":[{"id":63,"name":"numericLevel","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The log numeric level."}]},"type":{"type":"intrinsic","name":"number"},"text":{"comment":"<p>The log numeric level.</p>\n"}},{"id":64,"name":"loggerFunction","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The function to be used to write\nthe message."}]},"type":{"type":"reference","id":8,"name":"LoggerFunction"},"text":{"comment":"<p>The function to be used to write\nthe message.</p>\n"}},{"id":65,"name":"message","kind":32768,"kindString":"Parameter","flags":{},"comment":{"summary":[{"kind":"text","text":"The log message."}]},"type":{"type":"union","types":[{"type":"intrinsic","name":"undefined"},{"type":"intrinsic","name":"string"}]},"text":{"comment":"<p>The log message.</p>\n"}}],"type":{"type":"intrinsic","name":"void"},"is":{"declaration":false},"location":{"query":"lib/logger.Logger.Method.write","hash":"write.write"},"text":{"comment":"<h5>Summary:</h5><p>The internal log writer.</p>\n<h5>Description:</h5><p>If the log level was defined, call the function, otherwise\nstore the log line details in the array buffer, for later\nprocessing, when the log level is defined.</p>\n"},"sources":[{"fileName":"lib/logger.ts","fullFileName":"/Users/ilg/My Files/WKS Projects/xpack.github/npm-modules/logger-ts.git/src/lib/logger.ts","line":450,"character":2,"url":"https://github.com/xpack/logger-ts/blob/b503a59/src/lib/logger.ts#L450"}],"parentId":61}],"is":{"declaration":true},"location":{"query":"lib/logger.Class.Logger","hash":"write"},"text":{},"parentId":16}],"groups":[{"title":"Constructors","children":[30]},{"title":"Properties","children":[33,36,35,34,17,29,28,18]},{"title":"Accessors","children":[59,37,57,53,45,49,43,55,51,47,39],"categories":[{"title":"Log Level Checks","children":[57,53,45,49,43,55,51,47]},{"title":"Log Level Management","children":[37,39]},{"title":"Other","children":[59]}]},{"title":"Methods","children":[66,90,70,82,74,94,86,78,61],"categories":[{"title":"Other","children":[61]},{"title":"Output","children":[66,90,70,82,74,94,86,78]}]}],"sources":[{"fileName":"lib/logger.ts","fullFileName":"/Users/ilg/My Files/WKS Projects/xpack.github/npm-modules/logger-ts.git/src/lib/logger.ts","line":134,"character":13,"url":"https://github.com/xpack/logger-ts/blob/b503a59/src/lib/logger.ts#L134"}],"is":{"declaration":true},"location":{"query":"lib/logger.Class.Logger","hash":""},"text":{"comment":"<h5>Summary:</h5><p>The Logger class implements the logger functionality.</p>\n<h5>Description:</h5><p>The logger is constructed on top of a console object, where the\nmessages are logged.</p>\n<p>Use <code>log.always()</code> instead of the <code>console.log()</code>, since it accounts for\ndifferent contexts, created for instance when using REPL.</p>\n<p>There is no <code>critical</code> level, corresponding to errors that prevent\nthe program to run, since these are actually related to bugs;\nuse <code>assert()</code> instead.</p>\n<p>The messages may include formatting directives, with additional\narguments, as defined by the Node.js console (not really necessary\nwith ES6).</p>\n<p>All output functions accept an optional string message and possibly\nsome arguments,\nas processed by the standard Node.js\n<a href=\"https://nodejs.org/dist/latest-v10.x/docs/api/util.html#util_util_format_format_args\"><code>util.format(msg, ...args)</code></a>\nfunction.</p>\n<p>If the logging code is more complex than a single line,\nfor example if it needs a long loop,\nit is recommended to explicitly check the log level and,\nif not high enough, skip the code entirely.</p>\n<h5>Example:</h5><pre><code class=\"language-javascript\">  <span class=\"pl-k\">if</span> (<span class=\"pl-smi\">log</span>.<span class=\"pl-smi\">isVerbose</span>) {\n    <span class=\"pl-k\">for</span> (<span class=\"pl-k\">const</span> [<span class=\"pl-c1\">folderName</span>, <span class=\"pl-c1\">folder</span>] <span class=\"pl-k\">of</span> <span class=\"pl-c1\">Object</span>.<span class=\"pl-c1\">entries</span>(folders)) {\n      <span class=\"pl-smi\">log</span>.<span class=\"pl-en\">trace</span>(<span class=\"pl-s\"><span class=\"pl-pds\">`</span>'<span class=\"pl-pse\"><span class=\"pl-s1\">${</span></span><span class=\"pl-s1\">folderName</span><span class=\"pl-pse\"><span class=\"pl-s1\">}</span></span>' <span class=\"pl-pse\"><span class=\"pl-s1\">${</span></span><span class=\"pl-smi\">folder</span><span class=\"pl-s1\">.</span><span class=\"pl-smi\">toolchainOptions</span><span class=\"pl-pse\"><span class=\"pl-s1\">}</span></span><span class=\"pl-pds\">`</span></span>)\n    }\n  }\n</code></pre>\n<p>There are cases when the logger must be created very early in the\nlife cycle of an application, even before it is practically possible\nto determine the log level.</p>\n<p>For these cases, if the logger is created without a log level,\nit is set to a <strong>preliminary state</strong>, and all log lines are\nstored in an <strong>internal buffer</strong>, until the log\nlevel is set, when the buffer is walked and the lines are processed.</p>\n"},"parentId":2,"hierarchy":[{"name":"Logger","isTarget":true,"linkId":"16"}]}
