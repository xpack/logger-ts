{"id":0,"name":"@xpack/logger - v6.0.0","kind":1,"flags":{},"originalName":"","children":[],"groups":[{"title":"Modules","children":[1,2]}],"is":{"declaration":false},"location":{"query":"index","hash":""},"text":{"readme":"<p><a href=\"https://www.npmjs.com/package/@xpack/logger\"><img src=\"https://img.shields.io/npm/v/@xpack/logger.svg\" alt=\"npm (scoped)\"></a>\n<a href=\"https://github.com/xpack/logger-ts/blob/xpack/LICENSE\"><img src=\"https://img.shields.io/github/license/xpack/logger-ts.svg\" alt=\"license\"></a>\n<a href=\"https://github.com/standard/ts-standard\"><img src=\"https://badgen.net/badge/code%20style/ts-standard/blue?icon=typescript\" alt=\"TS-Standard - Typescript Standard Style Guide\"></a>\n<a href=\"https://github.com/xpack/logger-ts/actions\"><img src=\"https://github.com/xpack/logger-ts/workflows/CI%20on%20Push/badge.svg\" alt=\"Actions Status\"></a>\n<a href=\"https://github.com/xpack/logger-ts/issues/\"><img src=\"https://img.shields.io/github/issues/xpack/logger-ts.svg\" alt=\"GitHub issues\"></a>\n<a href=\"https://github.com/xpack/logger-ts/pulls\"><img src=\"https://img.shields.io/github/issues-pr/xpack/logger-ts.svg\" alt=\"GitHub pulls\"></a></p>\n\n<a href=\"#a-generic-console-logger-class\" id=\"a-generic-console-logger-class\" style=\"color: inherit; text-decoration: none;\">\n  <h2>A generic console logger class</h2>\n</a>\n<p>A Node.js ES6 module with a generic console logger.</p>\n\n<a href=\"#prerequisites\" id=\"prerequisites\" style=\"color: inherit; text-decoration: none;\">\n  <h2>Prerequisites</h2>\n</a>\n<p>A recent <a href=\"https://nodejs.org\">Node.js</a> (&gt;=14.13), since the TypeScript code\nis compiled into ECMAScript 2020 code.</p>\n\n<a href=\"#easy-install\" id=\"easy-install\" style=\"color: inherit; text-decoration: none;\">\n  <h2>Easy install</h2>\n</a>\n<p>The module is available as\n<a href=\"https://www.npmjs.com/package/@xpack/logger\"><code>@xpack/logger</code></a>\nfrom the public <a href=\"https://www.npmjs.com\"><code>npmjs</code></a> repository;\nuse <code>npm</code> to install it inside the project where\nit is needed:</p>\n<pre><code class=\"language-console\">npm install @xpack/logger@latest\n</code></pre>\n<p>The module does not provide any executables, and generally there are no\nreasons to install it globally.</p>\n<p>The development repository is available from the GitHub\n<a href=\"https://github.com/xpack/logger-ts/\">xpack/logger-ts</a>\nproject.</p>\n\n<a href=\"#user-info\" id=\"user-info\" style=\"color: inherit; text-decoration: none;\">\n  <h2>User info</h2>\n</a>\n<p>This section is intended for those who want to use this module in their\nown projects.</p>\n<p>The <code>@xpack/logger</code> module can be imported in both TypeScript\nand JavaScript Node.js code:</p>\n<pre><code class=\"language-typescript\"><span class=\"pl-k\">import</span> { <span class=\"pl-smi\">Logger</span> } <span class=\"pl-k\">from</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>@xpack/logger<span class=\"pl-pds\">'</span></span>\n</code></pre>\n<p>The typical use case is to create an instance of the Logger object,\nthen log messages at different levels:</p>\n<pre><code class=\"language-javascript\"><span class=\"pl-k\">const</span> <span class=\"pl-c1\">log</span> <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-en\">Logger</span>({\n  level<span class=\"pl-k\">:</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>info<span class=\"pl-pds\">'</span></span>\n})\n\n<span class=\"pl-smi\">log</span>.<span class=\"pl-en\">info</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>hello<span class=\"pl-pds\">'</span></span>) <span class=\"pl-c\">// Displayed on stdout.</span>\n<span class=\"pl-smi\">log</span>.<span class=\"pl-en\">debug</span>(<span class=\"pl-s\"><span class=\"pl-pds\">'</span>world<span class=\"pl-pds\">'</span></span>) <span class=\"pl-c\">// Ignored.</span>\n</code></pre>\n<p>In more complex use cases, the log level can be tested and the (possibly)\nlong operations be performed only if necessary.</p>\n\n<a href=\"#log-levels\" id=\"log-levels\" style=\"color: inherit; text-decoration: none;\">\n  <h3>Log levels</h3>\n</a>\n<p>The following strings are recognised as valid level names:</p>\n<pre><code class=\"language-typescript\"><span class=\"pl-k\">export</span> <span class=\"pl-k\">type</span> <span class=\"pl-en\">LogLevel</span> <span class=\"pl-k\">=</span>\n  <span class=\"pl-s\"><span class=\"pl-pds\">'</span>silent<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">|</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>error<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">|</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>warn<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">|</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>info<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">|</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>verbose<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">|</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>debug<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">|</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>trace<span class=\"pl-pds\">'</span></span> <span class=\"pl-k\">|</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>all<span class=\"pl-pds\">'</span></span>\n</code></pre>\n<p>Internally the string levels are converted to integer values,\nand these integers are used in comparisons. Higher values\nmean more verbosity.</p>\n\n<a href=\"#delaying-setting-the-log-level\" id=\"delaying-setting-the-log-level\" style=\"color: inherit; text-decoration: none;\">\n  <h3>Delaying setting the log level</h3>\n</a>\n<p>There are cases when the logger must be created very early in the\nlife cycle of an application, even before it is practically possible\nto determine the log level.</p>\n<p>For these cases, if the logger is created without a log level,\nit is set to a <strong>preliminary state</strong>, and all log lines are\nstored in an internal buffer**, until the log\nlevel is set, when the buffer is walked and the lines are processed.</p>\n\n<a href=\"#output-methods\" id=\"output-methods\" style=\"color: inherit; text-decoration: none;\">\n  <h3>Output methods</h3>\n</a>\n<ul>\n<li><code>always (message: any = &#39;&#39;, ...args: any[]): void</code></li>\n<li><code>error (message: any = &#39;&#39;, ...args: any[]): void</code></li>\n<li><code>error (message: Error): void</code></li>\n<li><code>output (message: any = &#39;&#39;, ...args: any[]): void</code></li>\n<li><code>warn (message: any = &#39;&#39;, ...args: any[]): void</code></li>\n<li><code>info (message: any = &#39;&#39;, ...args: any[]): void</code></li>\n<li><code>verbose (message: any = &#39;&#39;, ...args: any[]): void</code></li>\n<li><code>debug (message: any = &#39;&#39;, ...args: any[]): void</code></li>\n<li><code>trace (message: any = &#39;&#39;, ...args: any[]): void</code></li>\n</ul>\n\n<a href=\"#reference\" id=\"reference\" style=\"color: inherit; text-decoration: none;\">\n  <h3>Reference</h3>\n</a>\n<p>For more details on the class definition, including all methods,\naccessors, members, etc,\nplease see the typedoc\n<a href=\"https://xpack.github.io/logger-ts/stable/\">reference pages</a>.</p>\n\n<a href=\"#compatibility-notices\" id=\"compatibility-notices\" style=\"color: inherit; text-decoration: none;\">\n  <h2>Compatibility notices</h2>\n</a>\n<p>According to <a href=\"https://semver.org\">semver</a> requirements,\nincompatible API changes require higher major numbers.</p>\n\n<a href=\"#v6x\" id=\"v6x\" style=\"color: inherit; text-decoration: none;\">\n  <h3>v6.x</h3>\n</a>\n<p>The package was fully migrated to ES6 modules, and can no longer be\nconsumed by legacy CommonJS packages.</p>\n<p>There were also some minor internal renames, but this should not be\na problem.</p>\n\n<a href=\"#v5x\" id=\"v5x\" style=\"color: inherit; text-decoration: none;\">\n  <h3>v5.x</h3>\n</a>\n<p>For consistency reasons, <code>hasLevel</code> was changed from a method to a getter.</p>\n<p>Internally, the log level starts as <code>undefined</code> instead of the\nstring <code>&#39;undefined&#39;</code>, as in previous versions.</p>\n<p>This should not be a problem, given that the method to check if\nthe level was set is via <code>hasLevel()</code>.</p>\n\n<a href=\"#v4x\" id=\"v4x\" style=\"color: inherit; text-decoration: none;\">\n  <h3>v4.x</h3>\n</a>\n<p>The code was migrated to TypeScript.</p>\n<p>The migration itself should not introduce any incompatibilities,\nactually it should be fairly compatible with the latest v3.x,\nbut, for just in case, the safer path was to consider it a major\nrelease.</p>\n\n<a href=\"#v3x\" id=\"v3x\" style=\"color: inherit; text-decoration: none;\">\n  <h3>v3.x</h3>\n</a>\n<p>All <code>isXyx</code> functions (returning a boolean related to\nthe log level) were changed to getters.</p>\n\n<a href=\"#v2x\" id=\"v2x\" style=\"color: inherit; text-decoration: none;\">\n  <h3>v2.x</h3>\n</a>\n<p>The logger constructor was changed to use the generic arguments object.</p>\n<p>If upgrading from previous versions, change the syntax from:</p>\n<pre><code class=\"language-javascript\"><span class=\"pl-k\">const</span> <span class=\"pl-c1\">log</span> <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-en\">Logger</span>(<span class=\"pl-en\">console</span>, <span class=\"pl-s\"><span class=\"pl-pds\">'</span>info<span class=\"pl-pds\">'</span></span>)\n</code></pre>\n<p>to:</p>\n<pre><code class=\"language-javascript\"><span class=\"pl-k\">const</span> <span class=\"pl-c1\">log</span> <span class=\"pl-k\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-en\">Logger</span>({\n  <span class=\"pl-en\">console</span>,\n  level<span class=\"pl-k\">:</span> <span class=\"pl-s\"><span class=\"pl-pds\">'</span>info<span class=\"pl-pds\">'</span></span>\n})\n</code></pre>\n\n<a href=\"#maintainer-amp-developer-info\" id=\"maintainer-amp-developer-info\" style=\"color: inherit; text-decoration: none;\">\n  <h2>Maintainer &amp; developer info</h2>\n</a>\n<p>This page documents how to use this module in an user application.\nFor developer and maintainer information, see the separate\n<a href=\"https://github.com/xpack/logger-ts/blob/master/README-DEVELOPER.md\">README-DEVELOPER</a> and\n<a href=\"https://github.com/xpack/logger-ts/blob/master/README-MAINTAINER.md\">README-MAINTAINER</a>\npages.</p>\n\n<a href=\"#license\" id=\"license\" style=\"color: inherit; text-decoration: none;\">\n  <h2>License</h2>\n</a>\n<p>The original content is released under the\n<a href=\"https://opensource.org/licenses/MIT\">MIT License</a>, with all rights\nreserved to <a href=\"https://github.com/ilg-ul/\">Liviu Ionescu</a>.</p>\n"}}
